name: Cut release (sync manifest version)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g. 0.1.3 or v0.1.3)"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Normalize version
        id: v
        run: |
          RAW_INPUT="${{ github.event.inputs.version }}"
          # Strip leading 'v' if present
          CLEANED="${RAW_INPUT#v}"
          echo "version=$CLEANED" >> $GITHUB_OUTPUT
          echo "tag=v$CLEANED" >> $GITHUB_OUTPUT

      - name: Update manifest.json version
        run: |
          FILE=custom_components/spaceapi_endpoint_client/manifest.json
          tmp=$(mktemp)
          jq --arg v "${{ steps.v.outputs.version }}" '.version = $v' "$FILE" > "$tmp"
          mv "$tmp" "$FILE"
          git diff "$FILE" || true

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add custom_components/spaceapi_endpoint_client/manifest.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(release): bump manifest version to ${{ steps.v.outputs.version }}"
          fi

      - name: Create tag
        run: |
          TAG="${{ steps.v.outputs.tag }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; skipping create"
          else
            git tag -a "$TAG" -m "Release $TAG"
          fi
          git push --follow-tags origin HEAD

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.v.outputs.tag }}
          name: ${{ steps.v.outputs.tag }}
          generate_release_notes: true


